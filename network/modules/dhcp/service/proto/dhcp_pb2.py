# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dhcp.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='dhcp.proto',
  package='',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\ndhcp.proto\")\n\x08Response\x12\x0c\n\x04\x63ode\x18\x01 \x01(\x05\x12\x0f\n\x07message\x18\x02 \x01(\t\"\'\n\tDHCPRange\x12\r\n\x05start\x18\x01 \x01(\t\x12\x0b\n\x03\x65nd\x18\x02 \x01(\t\"\x15\n\x13GetDHCPRangeRequest\"\x15\n\x13GetIPAddressRequest\"+\n\x16SetLeaseAddressRequest\x12\x11\n\tipAddress\x18\x01 \x01(\t2\xcf\x01\n\x04\x44HCP\x12\x32\n\x0cGetDHCPRange\x12\x14.GetDHCPRangeRequest\x1a\n.DHCPRange\"\x00\x12\'\n\x0cSetDHCPRange\x12\n.DHCPRange\x1a\t.Response\"\x00\x12\x31\n\x0cGetIPAddress\x12\x14.GetIPAddressRequest\x1a\t.Response\"\x00\x12\x37\n\x0fSetLeaseAddress\x12\x17.SetLeaseAddressRequest\x1a\t.Response\"\x00\x62\x06proto3'
)




_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='code', full_name='Response.code', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='message', full_name='Response.message', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14,
  serialized_end=55,
)


_DHCPRANGE = _descriptor.Descriptor(
  name='DHCPRange',
  full_name='DHCPRange',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='start', full_name='DHCPRange.start', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='end', full_name='DHCPRange.end', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=57,
  serialized_end=96,
)


_GETDHCPRANGEREQUEST = _descriptor.Descriptor(
  name='GetDHCPRangeRequest',
  full_name='GetDHCPRangeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=98,
  serialized_end=119,
)


_GETIPADDRESSREQUEST = _descriptor.Descriptor(
  name='GetIPAddressRequest',
  full_name='GetIPAddressRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=121,
  serialized_end=142,
)


_SETLEASEADDRESSREQUEST = _descriptor.Descriptor(
  name='SetLeaseAddressRequest',
  full_name='SetLeaseAddressRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='ipAddress', full_name='SetLeaseAddressRequest.ipAddress', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=144,
  serialized_end=187,
)

DESCRIPTOR.message_types_by_name['Response'] = _RESPONSE
DESCRIPTOR.message_types_by_name['DHCPRange'] = _DHCPRANGE
DESCRIPTOR.message_types_by_name['GetDHCPRangeRequest'] = _GETDHCPRANGEREQUEST
DESCRIPTOR.message_types_by_name['GetIPAddressRequest'] = _GETIPADDRESSREQUEST
DESCRIPTOR.message_types_by_name['SetLeaseAddressRequest'] = _SETLEASEADDRESSREQUEST
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), {
  'DESCRIPTOR' : _RESPONSE,
  '__module__' : 'dhcp_pb2'
  # @@protoc_insertion_point(class_scope:Response)
  })
_sym_db.RegisterMessage(Response)

DHCPRange = _reflection.GeneratedProtocolMessageType('DHCPRange', (_message.Message,), {
  'DESCRIPTOR' : _DHCPRANGE,
  '__module__' : 'dhcp_pb2'
  # @@protoc_insertion_point(class_scope:DHCPRange)
  })
_sym_db.RegisterMessage(DHCPRange)

GetDHCPRangeRequest = _reflection.GeneratedProtocolMessageType('GetDHCPRangeRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETDHCPRANGEREQUEST,
  '__module__' : 'dhcp_pb2'
  # @@protoc_insertion_point(class_scope:GetDHCPRangeRequest)
  })
_sym_db.RegisterMessage(GetDHCPRangeRequest)

GetIPAddressRequest = _reflection.GeneratedProtocolMessageType('GetIPAddressRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETIPADDRESSREQUEST,
  '__module__' : 'dhcp_pb2'
  # @@protoc_insertion_point(class_scope:GetIPAddressRequest)
  })
_sym_db.RegisterMessage(GetIPAddressRequest)

SetLeaseAddressRequest = _reflection.GeneratedProtocolMessageType('SetLeaseAddressRequest', (_message.Message,), {
  'DESCRIPTOR' : _SETLEASEADDRESSREQUEST,
  '__module__' : 'dhcp_pb2'
  # @@protoc_insertion_point(class_scope:SetLeaseAddressRequest)
  })
_sym_db.RegisterMessage(SetLeaseAddressRequest)



_DHCP = _descriptor.ServiceDescriptor(
  name='DHCP',
  full_name='DHCP',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=190,
  serialized_end=397,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetDHCPRange',
    full_name='DHCP.GetDHCPRange',
    index=0,
    containing_service=None,
    input_type=_GETDHCPRANGEREQUEST,
    output_type=_DHCPRANGE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='SetDHCPRange',
    full_name='DHCP.SetDHCPRange',
    index=1,
    containing_service=None,
    input_type=_DHCPRANGE,
    output_type=_RESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetIPAddress',
    full_name='DHCP.GetIPAddress',
    index=2,
    containing_service=None,
    input_type=_GETIPADDRESSREQUEST,
    output_type=_RESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='SetLeaseAddress',
    full_name='DHCP.SetLeaseAddress',
    index=3,
    containing_service=None,
    input_type=_SETLEASEADDRESSREQUEST,
    output_type=_RESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_DHCP)

DESCRIPTOR.services_by_name['DHCP'] = _DHCP

# @@protoc_insertion_point(module_scope)
